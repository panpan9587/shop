// Code generated by goctl. DO NOT EDIT.
// Source: goods.proto

package goodsclient

import (
	"context"

	"demo/goods-srv/goods"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetGoodsInfoRequest  = goods.GetGoodsInfoRequest
	GetGoodsInfoResponse = goods.GetGoodsInfoResponse
	GoodsInfo            = goods.GoodsInfo
	ReleaseGoodsRequest  = goods.ReleaseGoodsRequest
	ReleaseGoodsResponse = goods.ReleaseGoodsResponse

	Goods interface {
		// 发布商品
		ReleaseGoods(ctx context.Context, in *ReleaseGoodsRequest, opts ...grpc.CallOption) (*ReleaseGoodsResponse, error)
		// 查看商品详情
		GetGoodsInfo(ctx context.Context, in *GetGoodsInfoRequest, opts ...grpc.CallOption) (*GetGoodsInfoResponse, error)
	}

	defaultGoods struct {
		cli zrpc.Client
	}
)

func NewGoods(cli zrpc.Client) Goods {
	return &defaultGoods{
		cli: cli,
	}
}

// 发布商品
func (m *defaultGoods) ReleaseGoods(ctx context.Context, in *ReleaseGoodsRequest, opts ...grpc.CallOption) (*ReleaseGoodsResponse, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.ReleaseGoods(ctx, in, opts...)
}

// 查看商品详情
func (m *defaultGoods) GetGoodsInfo(ctx context.Context, in *GetGoodsInfoRequest, opts ...grpc.CallOption) (*GetGoodsInfoResponse, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.GetGoodsInfo(ctx, in, opts...)
}
