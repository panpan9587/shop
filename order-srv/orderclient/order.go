// Code generated by goctl. DO NOT EDIT.
// Source: order.proto

package orderclient

import (
	"context"

	"demo/order-srv/order"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AliPayRequest             = order.AliPayRequest
	AliPayResponse            = order.AliPayResponse
	CreateOrderRequest        = order.CreateOrderRequest
	CreateOrderResponse       = order.CreateOrderResponse
	UpdateOrderStatusRequest  = order.UpdateOrderStatusRequest
	UpdateOrderStatusResponse = order.UpdateOrderStatusResponse

	Order interface {
		// 创建订单
		CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderResponse, error)
		// 修改订单状态
		UpdateOrderStatus(ctx context.Context, in *UpdateOrderStatusRequest, opts ...grpc.CallOption) (*UpdateOrderStatusResponse, error)
		// 支付，返回支付宝付款地址
		AliPay(ctx context.Context, in *AliPayRequest, opts ...grpc.CallOption) (*AliPayResponse, error)
	}

	defaultOrder struct {
		cli zrpc.Client
	}
)

func NewOrder(cli zrpc.Client) Order {
	return &defaultOrder{
		cli: cli,
	}
}

// 创建订单
func (m *defaultOrder) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderResponse, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.CreateOrder(ctx, in, opts...)
}

// 修改订单状态
func (m *defaultOrder) UpdateOrderStatus(ctx context.Context, in *UpdateOrderStatusRequest, opts ...grpc.CallOption) (*UpdateOrderStatusResponse, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.UpdateOrderStatus(ctx, in, opts...)
}

// 支付，返回支付宝付款地址
func (m *defaultOrder) AliPay(ctx context.Context, in *AliPayRequest, opts ...grpc.CallOption) (*AliPayResponse, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.AliPay(ctx, in, opts...)
}
